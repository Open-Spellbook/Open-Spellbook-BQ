models:
- columns:
  - description: Solver's wallet address
    name: address
    tests: []
  - &id005
    description: Development environment
    name: environment
    tests: []
  - description: Solver's name
    name: name
    tests: []
  - description: Solver's active status according to the events emitted by GPv2AllowListAuthentication.
      True if solver has been 'added' and not yet removed, False when the solver has
      been 'removed'.
    name: active
    tests: []
  config:
    tags:
    - ethereum
    - cow_protocol
    - solver
  description: 'CoW Protocol solvers list on Ethereum

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith, gentrexha
    project: cow_protocol
  name: cow_protocol_ethereum_solvers
  tests: []
- columns:
  - &id001
    description: UTC event block date of each trade
    name: block_date
    tests: []
  - &id002
    description: Block number that the transaction was included
    name: block_number
    tests: []
  - &id003
    description: Timestamp for block event time in UTC
    name: block_time
    tests: []
  - &id004
    description: Transaction hash of trade
    name: tx_hash
    tests: []
  - description: Index of the corresponding trade event
    name: evt_index
    tests: []
  - &id007
    description: Unique identifier of order involved in trade. Note that partially
      fillable orders can be touched multiple times so this is not a unique ID for
      trade events.
    name: order_uid
    tests: []
  - &id013
    description: Owner of the order being traded (aka trader)
    name: trader
    tests: []
  - description: Ethereum address of sellToken
    name: sell_token_address
    tests: []
  - description: Symbol of sellToken
    name: sell_token
    tests: []
  - description: Ethereum address of buyToken
    name: buy_token_address
    tests: []
  - &id010
    description: Symbol of buyToken
    name: buy_token
    tests: []
  - description: Ordered concatenation of buy/sell token symbols involved in trade
    name: token_pair
    tests: []
  - description: Units of sellToken sold (incorporates token decimals).
    name: units_sold
    tests: []
  - description: Amount (in atoms) of the sellToken sold
    name: atoms_sold
    tests: []
  - description: Units of buyToken bought (incorporates token decimals).
    name: units_bought
    tests: []
  - description: Amount (in atoms) of the buyToken bought
    name: atoms_bought
    tests: []
  - description: USD value of trade (taken as the max of buy value, sell value when
      both available, otherwise whichever is known)
    name: usd_value
    tests: []
  - description: USD price of buyToken at the time of trade
    name: buy_price
    tests: []
  - description: USD value of buyToken amount
    name: buy_value_usd
    tests: []
  - description: USD price of sellToken at the time of trade
    name: sell_price
    tests: []
  - description: USD value of sellToken amount
    name: sell_value_usd
    tests: []
  - &id009
    description: Unit of fee taken (in sellToken) - incorporating token decimals
    name: fee
    tests: []
  - description: Amount (in atoms) of fee - taken in sellToken
    name: fee_atoms
    tests: []
  - description: USD value of trade fee
    name: fee_usd
    tests: []
  - description: Hashed metadata related to trade event (full content available on
      IPFS)
    name: app_data
    tests: []
  - &id011
    description: Recipient of trades buyToken
    name: receiver
    tests: []
  - description: Sell amount side of the limit price
    name: limit_sell_amount
    tests: []
  - description: Buy amount side of the limit price
    name: limit_buy_amount
    tests: []
  - &id008
    description: epoch timestamp (in seconds) until when the order was valid
    name: valid_to
    tests: []
  - description: bitmap with additional trade information (cf. https://github.com/cowprotocol/contracts/blob/main/src/contracts/libraries/GPv2Trade.sol#L58-L94)
    name: flags
    tests: []
  - description: USD value of surplus (difference between limit and executed price)
    name: surplus_usd
    tests: []
  - description: SELL/BUY string indicating if the trade was a sell or buy order
    name: order_type
    tests: []
  - description: Boolean indicating if the order is partially fill-able
    name: partial_fill
    tests: []
  config:
    tags:
    - ethereum
    - cow_protocol
    - trades
    - dex
    - aggregator
  description: 'CoW Protocol enriched trades list on Ethereum

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith, gentrexha
    project: cow_protocol
  name: cow_protocol_ethereum_trades
  tests:
  - dbt_utils.unique_combination_of_columns:
      combination_of_columns:
      - tx_hash
      - order_uid
      - evt_index
- columns:
  - *id001
  - *id002
  - *id003
  - description: Number of trades settled within the batch
    name: num_trades
    tests: []
  - description: Number of AMM interactions used to settle the batch (Null when unknown)
    name: dex_swaps
    tests: []
  - description: Total USD value of trades settled within the batch
    name: batch_value
    tests: []
  - &id006
    description: Ethereum address of solver settled batch (equivalent to tx.from)
    name: solver_address
    tests: []
  - *id004
  - description: Gas price (in WEI) of transaction
    name: gas_price
    tests: []
  - description: Total/cumulative gas consumed (in WEI) to settle the batch
    name: gas_used
    tests: []
  - description: USD cost of batch execution (gas_price * gas_used) / 1e18 * ETH price
    name: tx_cost_usd
    tests: []
  - name: Total USD valuation of fees collected from all trades within the batch
    tests: []
  - description: Size (in Kilobytes) of call data passed into the settle method.
    name: call_data_size
    tests: []
  - description: Number of WETH unwraps performed within the settlement
    name: unwraps
    tests: []
  - description: Number of ERC20 token approvals made within the settlement
    name: token_approvals
    tests: []
  config:
    tags:
    - ethereum
    - cow_protocol
    - trades
    - dex
    - aggregator
    - auction
  description: 'CoW Protocol enriched batches table on Ethereum

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith, gentrexha
    project: cow_protocol
  name: cow_protocol_ethereum_batches
  tests: []
- columns:
  - &id012
    description: Unique identifier of AppData published on-chain, used to fetch remaining
      content from IPFS. This can be recovered from call data provided to the Settlement
      Contracts `settle` method
    name: app_hash
    tests: []
  - description: App Code is an indicator of where the order came from - primarily
      intended to be used for integration partners
    name: app_code
    tests: []
  - *id005
  - description: Enum flag indicating if an order was a market or limit order (can
      be Null)
    name: order_class
    tests: []
  - &id014
    description: Ethereum address of referrer - used for tracking affiliate data (can
      be Null)
    name: referrer
    tests: []
  - description: User's slippage tolerance configured through the interface. Used
      to compute trade execution price improvement (can be Null)
    name: slippage_bips
    tests: []
  config:
    tags:
    - ethereum
    - cow_protocol
    - app_data
    - metadata
  description: 'CoW Protocol App Data is JSON content stored on IPFS corresponding
    to order AppHash (cf. CoW Documentation https://docs.cow.fi/front-end/creating-app-ids).

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith
    project: cow_protocol
  name: cow_protocol_ethereum_app_data
  tests: []
- columns:
  - *id004
  - *id006
  - *id002
  - description: COW token reward distributed to solver for settling order
    name: cow_reward
    tests: []
  - description: Fee taken from limit orders
    name: surplus_fee
    tests: []
  - *id007
  config:
    tags:
    - ethereum
    - cow_protocol
    - app_data
    - metadata
  description: 'Order Rewards contains the data necessary to compute Weekly Solver
    Payouts. In particular, how much COW token solvers are entitled for each settled
    order. Furthermore, since the introduction of limit orders into the protocol,  this
    table also contains the surplus fee.

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith
    project: cow_protocol
  name: cow_protocol_ethereum_order_rewards
  tests: []
- columns:
  - *id001
  - *id003
  - *id002
  - *id004
  - *id005
  - *id008
  - description: Integer corresponding to the quote user was given in the interface.
    name: quote_id
    tests: []
  - description: sell amount as part of the signed user order
    name: sell_amount
    tests: []
  - *id009
  - description: buy amount as part of the signed user order
    name: buy_amount
    tests: []
  - *id010
  - *id011
  - description: sender of order placement transaction. Equivalent to "trader"
    name: sender
    tests: []
  - *id012
  - *id007
  config:
    tags:
    - ethereum
    - cow_protocol
    - eth-flow
    - orders
  description: 'ETHFlow enables the sale of Native ETH via CoW Protocol. This works
    essentially by placing an (onchain) order,  through the ETHFlow contract (https://github.com/cowprotocol/ethflowcontract)
    sending native which then wraps  the asset as an ERC20. The order is filled through
    this intermediary contract that uses ERC1271 signature  verification to place
    the order on the user''s behalf.

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith
    project: cow_protocol
  name: cow_protocol_ethereum_eth_flow_orders
  tests: []
- columns:
  - *id013
  - *id014
  config:
    tags:
    - ethereum
    - cow_protocol
    - affiliate
    - referrals
  description: 'The CoW Protocol Affiliate Program works based on referrals contained
    in AppData. A referral is considered valid whenever a new trader comes and places
    their first  order with referral address in the meta content. This table contains
    the relevant  query to build the affiliate mapping.

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith
    project: cow_protocol
  name: cow_protocol_ethereum_referrals
  tests: []
- columns:
  - *id007
  - *id003
  - *id002
  - name: buy_quote
    tests: []
  - name: sell_quote
    tests: []
  - name: tolerance_bips
    tests: []
  - name: trade_usd_value
    tests: []
  - name: fill_proportion
    tests: []
  - name: amount_atoms
    tests: []
  - name: amount_percentage
    tests: []
  - name: amount_usd
    tests: []
  config:
    tags:
    - ethereum
    - cow_protocol
    - trade_slippage
  description: 'The query contains several measurements between the quoted price on
    cowswap and  the executed price. The price difference between the quote and the
    actual price  is called price improvement and is measured as percentage or in
    absolute dollars.

    '
  meta:
    blockchain: ethereum
    contributors: bh2smith, gentrexha, josojo
    project: cow_protocol
  name: cow_protocol_ethereum_trade_slippage
  tests:
  - dbt_utils.unique_combination_of_columns:
      combination_of_columns:
      - order_uid
      - block_number
version: 2
