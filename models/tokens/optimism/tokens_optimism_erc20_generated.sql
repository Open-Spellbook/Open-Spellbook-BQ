{{ config(
    alias='erc20_generated',
    post_hook='{{ expose_spells(\'["optimism"]\',
                                    "sector",
                                    "tokens",
                                    \'["msilb7"]\') }}') }}

-- Pull tokens deterministically generated by contracts
with generated_tokens_list as (
    select
        contract_address,
        symbol,
        MIN(decimals) as decimals,
        token_type,
        token_mapping_source

    from (

        select
            LOWER(l2_token) as contract_address,
            l1_symbol as symbol,
            l1_decimals as decimals,
            'underlying' as token_type,
            'l2 bridge mapping' as token_mapping_source
        from {{ ref('tokens_optimism_erc20_bridged_mapping') }}
        where l1_symbol is not null

        union all

        select
            LOWER(atoken_address) as contract_address,
            atoken_symbol as symbol,
            atoken_decimals as decimals,
            'receipt' as token_type,
            'aave factory' as token_mapping_source
        from {{ ref('aave_v3_tokens') }}
        where blockchain = 'optimism'

        union all

        select
            LOWER(atoken_address) as contract_address,
            atoken_symbol as symbol,
            atoken_decimals as decimals,
            'receipt' as token_type,
            'the granary factory' as token_mapping_source
        from {{ ref('the_granary_optimism_tokens') }}
        where blockchain = 'optimism'

        union all

        select
            LOWER(vault_token) as contract_address,
            vault_symbol as symbol,
            18 as decimals,
            'receipt' as token_type,
            'yearn vault factory' as token_mapping_source
        from {{ ref('yearn_optimism_vaults') }}
        where blockchain = 'optimism'

    ) as a
    group by contract_address, symbol, token_type, token_mapping_source --get uniques & handle if L2 token factory gets decimals wrong
)

select
    LOWER(contract_address) as contract_address,
    symbol,
    decimals,
    token_type,
    token_mapping_source

from (
    select
        contract_address,
        symbol,
        decimals,
        token_type,
        token_mapping_source
    from generated_tokens_list
) as a
